allprojects {

    apply plugin: 'java'
    apply plugin: 'idea' // create an intellij project layout


    sourceCompatibility = '1.10'
    targetCompatibility = '1.10'

    version = (Boolean.parseBoolean(is_snapshot)) ?
            major_version + '.' + minor_version + '-SNAPSHOT' :
            major_version + '.' + minor_version

}

buildscript {
    repositories {
        mavenLocal()
        mavenCentral()
    }

    dependencies {
        classpath group: 'org.apache.commons', name: 'commons-lang3', version:'+'
        classpath group: 'com.amazonaws', name: 'aws-java-sdk', version:'1.11.376'
        classpath group: 'org.akhikhl.gretty', name: 'gretty', version:'+'


    }

}

subprojects {

    repositories {
        mavenLocal()
        mavenCentral()
        jcenter()
    }

    dependencies {

        compile group: 'org.scala-lang', name: 'scala-library', version: '2.13.1'
        compile group: 'org.scalactic', name: 'scalactic_2.13', version: '3.0.8'

        testCompile group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: junit_version
        testRuntime group: 'org.junit.jupiter', name: 'junit-jupiter-engine', version: junit_version
        testCompile group: 'org.scalatest', name: 'scalatest_2.13', version: '3.0.8'


    }

    if (file("src/main/scala").directory || file("src/test/scala").directory) {
        apply plugin: 'scala'
        sourceSets {
            main {
                scala {
                    srcDirs = ['src/main/scala', 'src/main/java']
                }
                java {
                    srcDirs = []
                }
            }
            test {
                scala {
                    srcDirs = ['src/test/scala', 'src/test/java']
                }
                java {
                    srcDirs = []
                }
            }
        }

        idea {
            targetVersion = "13"
        }
    }

    test {
        useJUnitPlatform()
    }

}
